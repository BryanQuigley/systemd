#! /bin/bash
#
# random	init script to setup /udev
#
# chkconfig: 2345 20 80
# description: manage user-space device nodes in /udev

. /etc/rc.d/init.d/functions

. /etc/udev/udev.conf

sysfs_dir=/sys
bin=/sbin/udev

run_udev () {
	# handle block devices and their partitions
	for i in ${sysfs_dir}/block/*; do
		# add each drive
		export DEVPATH=${i#${sysfs_dir}}
		$bin block &

		# add each partition, on each device
		for j in $i/*; do
			if [ -f $j/dev ]; then
				export DEVPATH=${j#${sysfs_dir}}
				$bin block &
			fi
		done
	done
	# all other device classes
	for i in ${sysfs_dir}/class/*; do
		for j in $i/*; do
			if [ -f $j/dev ]; then
				export DEVPATH=${j#${sysfs_dir}}
				CLASS=`echo ${i#${sysfs_dir}} | \
					cut --delimiter='/' --fields=3-`
				$bin $CLASS &
			fi
		done
	done
}


case "$1" in
  start)
	if [ ! -d $sysfs_dir ]; then
		exit 1
	fi
	if [ ! -d $udev_root ]; then
		mkdir $udev_root
	fi

	# remove the database if it is there as we always want to start fresh
	if [ -f $udev_root/.udevdb ]; then
		rm -f $udev_root/.udevdb
	fi

	# propogate /udev from /sys - we only need this while we do not
	# have initramfs and an early user-space with which to do early
	# device bring up
	action "Creating initial udev device nodes: " /bin/true
	export ACTION=add
	run_udev 
	;;
  stop)
  	# be careful
	action "Removing udev device nodes: " /bin/true
	export ACTION=remove
	run_udev 
	;;
  status)
  	if [ -d $udev_root ]; then
		echo "the udev device node directory exists"
	else
		echo "the udev device node directory does not exist"
	fi
	;;
  restart)
	$0 stop
	$0 start
	;;
  reload)
  	# nothing to do here
	;;
  *)
  	echo "Usage: $0 {start|stop|status|restart}"
	exit 1
esac

exit 0
