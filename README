udev - userspace device management

For more information see the files in the docs/ directory.

Important Note:
  Integrating udev in the system is a whole lot of work, has complex dependencies
  and differs a lot from distro to distro. All reasonable distros depend on udev
  these days and the system will not work without it.

  The upstream udev project does not support or recomend to replace a distro's udev
  installation with the upstream version. The installation of a unmodified upstream
  version may render your system unusable! There is no "default" setup or a set
  of "default" rules provided by the upstream udev version.

Requirements:
  - 2.6 version of the Linux kernel.

  - The kernel must have sysfs, netlink, and hotplug enabled.

  - The proc filesystem must be mounted on /proc.

  - The sysfs filesystem must be mounted at /sys. No other location
    is supported.


Operation:
  - Udev creates and removes device nodes in /dev based on events
    the kernel sends out on device discovery or removal

  - Directly after mounting the root filesystem, the udevd daemon must be
    started by an init script.

  - From kernel version 2.6.15 on, the hotplug helper /sbin/hotplug should
    be disabled with an init script before kernel modules are loaded.

  - During bootup, /dev usually gets a tmpfs filesystem mounted which is
    populated from scratch by udev (created nodes don't survive a reboot,
    the /lib/udev/devices directory should be used for "static nodes").

  - Udev replaces the hotplug event management invoked from /sbin/hotplug
    by the udevd daemon, which receives the kernel events over netlink.

  - All kernel events are matched against a set of specified rules which
    make it possible to hook into the event processing.

  - Copies of the rules files for all major distros are in the etc/udev
    directory (you may look there how others distros are doing it).

Compile Options:
  prefix
  	Set this to the default root that you want to use only override
  	this if you really know what you are doing even then, you probably
  	don't do the right thing.
  DESTDIR
  	Prefix for install target, used for package building.
  USE_LOG
  	if set to 'true', udev is able to pass errors or debug information
  	to syslog. This is very useful to see what udev is doing or not doing,
  	it is enabled by default.
  DEBUG
  	If set to 'true', very verbose debugging messages will be compiled
  	into the udev binaries. The actual level of debugging is specified
  	in the udev config file.
  STRIPCMD
  	If udev is compiled for packaging an empty string can be passed
  	to disable the stripping of the binaries.
  USE_SELINUX
  	If set to 'true', udev will be built with SELinux support
  	enabled.  This is disabled by default.
  USE_KLIBC
  	If set to 'true', udev is built and linked against klibc.
  	Default value is 'false'. KLCC specifies the klibc compiler
  	wrapper, usually located at /usr/bin/klcc.
  EXTRAS
  	If set, will build the "extra" helper programs as specified
  	as listed (see below for an example).

If you want to build the udev helper program cdrom_id and scsi_id:
  make EXTRAS="extras/cdrom_id extras/scsi_id"

Installation:
  - The install target intall the udev binaries in the default locations,
    all at boot time reqired binaries will be installed in /sbin.

  - The default location for scripts and binaries that are called from
    rules is /lib/udev.

  - It is recommended to use the /lib/udev/devices directory to place
    device nodes and symlinks in, which are copied to /dev at every boot.
    That way, nodes for broken subsystems or devices which can't be
    detected automatically by the kernel will always be available.

Please direct any comment/question/concern to the linux-hotplug-devel mailing list at:
  linux-hotplug-devel@lists.sourceforge.net

