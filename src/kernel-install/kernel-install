#!/bin/bash
# -*- mode: shell-script; indent-tabs-mode: nil; sh-basic-offset: 4; -*-
# ex: ts=8 sw=4 sts=4 et filetype=sh
#
# This file is part of systemd.
#
# Copyright 2013 Harald Hoyer
#
# systemd is free software; you can redistribute it and/or modify it
# under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation; either version 2.1 of the License, or
# (at your option) any later version.
#
# systemd is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with systemd; If not, see <http://www.gnu.org/licenses/>.

usage()
{
    echo "Usage:" >&2
    echo "        $0 add <kernel-version> <kernel-image>" >&2
    echo "        $0 remove <kernel-version> <kernel-image>" >&2
}

dropindirs_sort()
{
    local suffix=$1; shift
    local -a files
    local f d i

    readarray -t files < <(
        for d in "$@"; do
            for i in "$d/"*"$suffix"; do
                if [[ -e "$i" ]]; then
                    echo "${i##*/}"
                fi
            done
        done | sort -Vu
    )

    for f in "${files[@]}"; do
        for d in "$@"; do
            if [[ -e "$d/$f" ]]; then
                echo "$d/$f"
                continue 2
            fi
        done
    done
}

export LC_COLLATE=C

COMMAND="$1"
KERNEL_VERSION="$2"
KERNEL_IMAGE="$3"

if [[ -f /etc/os-release ]]; then
    . /etc/os-release
fi

if ! [[ $ID ]]; then
    echo "Could not determine the distribution name from /etc/os-release." >&2
    echo "Please specify ID=... in /etc/os-release. See man:os-release(5)" >&2
    exit 1
fi

if [[ -f /etc/machine-id ]]; then
    read MACHINE_ID < /etc/machine-id
fi

if ! [[ $MACHINE_ID ]]; then
    echo "Could not determine your machine ID from /etc/machine-id." >&2
    echo "Please run 'systemd-machine-id-setup' as root. See man:machine-id(5)" >&2
    exit 1
fi

if [[ -f /etc/kernel/cmdline ]]; then
    readarray -t BOOT_OPTIONS < /etc/kernel/cmdline
fi

if ! [[ ${BOOT_OPTIONS[*]} ]]; then
    readarray -t BOOT_OPTIONS < /proc/cmdline
fi

if ! [[ $BOOT_OPTIONS ]]; then
    echo "Could not determine the kernel command line parameters." >&2
    echo "Please specify the kernel command line in /etc/kernel/cmdline!" >&2
    exit 1
fi

if [[ ! $COMMAND ]] || [[ ! $KERNEL_VERSION ]]; then
    usage
    exit 1
fi

BOOT_DIR="/$MACHINE_ID/$KERNEL_VERSION"
BOOT_DIR_ABS="/boot$BOOT_DIR"
LOADER_ENTRY="/boot/loader/entries/$MACHINE_ID-$KERNEL_VERSION.conf"
ret=0

readarray -t PLUGINS < <(
    dropindirs_sort ".install" \
        "/etc/kernel/install.d" \
        "/usr/lib/kernel/install.d"
)

case $COMMAND in
    add)
        if [[ ! $KERNEL_IMAGE ]]; then
            usage
            exit 1
        fi

        mkdir -p "$BOOT_DIR_ABS" || {
            echo "Could not create boot directory '$BOOT_DIR_ABS'." >&2
            exit 1
        }

        for f in "${PLUGINS[@]}"; do
            [[ -x $f ]] && "$f" add "$KERNEL_VERSION" "$BOOT_DIR_ABS"
            ((ret+=$?))
        done

        cp --preserve "$KERNEL_IMAGE" "$BOOT_DIR_ABS/linux" || {
            echo "Could not copy '$KERNEL_IMAGE to '$BOOT_DIR_ABS/linux'." >&2
            exit 1
        }

        mkdir -p "${LOADER_ENTRY%/*}" || {
            echo "Could not create loader entry directory '${LOADER_ENTRY%/*}'." >&2
            exit 1
        }

        {
            echo "title      $PRETTY_NAME"
            echo "version    $KERNEL_VERSION"
            echo "machine-id $MACHINE_ID"
            echo "options    ${BOOT_OPTIONS[*]}"
            echo "linux      $BOOT_DIR/linux"
            [[ -f $BOOT_DIR_ABS/initrd ]] && \
                echo "initrd     $BOOT_DIR/initrd"
        } > "$LOADER_ENTRY" || {
            echo "Could not create loader entry '$LOADER_ENTRY'." >&2
            exit 1
        }
        ;;

    remove)
        for f in "${PLUGINS[@]}"; do
            [[ -x $f ]] && "$f" remove "$KERNEL_VERSION" "$BOOT_DIR_ABS"
            ((ret+=$?))
        done

        rm -rf "$LOADER_ENTRY" "$BOOT_DIR_ABS"
        ;;

    *)
        usage
        exit 1
        ;;
esac

((ret+=$?))

exit $ret
